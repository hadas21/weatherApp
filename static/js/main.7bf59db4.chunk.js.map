{"version":3,"sources":["components/Poster.js","apiConfig.js","api/getWeather.js","components/Location.js","components/Weather.js","components/Info.js","App.js","index.js"],"names":["poster","display","justifyContent","flexDirection","backgroundImage","backgroundPosition","height","width","fontFamily","Poster","props","style","apiUrls","apiUrl","window","location","hostname","getWeather","city","country","axios","url","method","input","background","marginRight","borderTop","borderRight","borderLeft","borderBottom","color","padding","button","backgroundColor","borderColor","borderRadius","Location","setLocation","setData","useEffect","handleChange","event","persist","prevLocation","updatedField","target","name","value","Object","assign","onSubmit","e","preventDefault","then","res","data","catch","err","console","log","onChange","placeholder","Button","type","weather","textAlign","lineHeight","tr","Weather","useState","temperature","setTemperature","humidity","setHumidity","conditions","setConditions","sys","main","temp","description","Table","bordered","variant","responsive","size","info","Info","layout","flexFlow","border","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAOMA,EAAS,CACdC,QAAS,OACTC,eAAgB,SAChBC,cAAe,SACfC,gBAAgB,OAAD,OANf,uIAMe,KACfC,mBAAoB,SACpBC,OAAQ,QACRC,MAAO,OACPC,WAAY,sBAaEC,EAVA,SAACC,GACf,OACC,0BAASC,MAAOX,EAAhB,UACC,gDACA,2DAA6B,uBAA7B,wC,uCCrBGY,EAEO,qDAFPA,EAGQ,qDASCC,EANkB,cAA7BC,OAAOC,SAASC,SACVJ,EAEAA,ECJGK,EAAa,SAACC,EAAMC,GAC/B,OAAOC,IAAM,CACXC,IAAKR,EAASK,EAAO,IAAMC,EAAtBN,yDACLS,OAAQ,SCENC,EAAQ,CACbC,WAAY,UACZC,YAAa,OACbC,UAAW,OACXC,YAAa,OACbC,WAAY,OACZC,aAAc,oBACdC,MAAM,QACNC,QAAS,OAEJC,EAAS,CAKdC,gBAAiB,UACjBH,MAAO,QACPI,YAAa,UACbH,QAAS,WACTI,aAAc,OA2DAC,EAzDE,SAAC1B,GAGlB,IAAQK,EAAmCL,EAAnCK,SAAUsB,EAAyB3B,EAAzB2B,YAAaC,EAAY5B,EAAZ4B,QAE/BC,qBAAU,WACTtB,EAAWF,EAASG,KAAMH,EAASI,WAEjC,CAACJ,EAASG,KAAMH,EAASI,UAE5B,IAAMqB,EAAe,SAACC,GACrBA,EAAMC,UAENL,GAAY,SAACM,GACZ,IAAMC,EAAY,eAAMH,EAAMI,OAAOC,KAAOL,EAAMI,OAAOE,OAQzD,OANuBC,OAAOC,OAC7B,GACAN,EACAC,OAaF,OACC,mCACC,uBAAMM,SATY,SAACC,GACrBA,EAAEC,iBACFnC,EAAWF,EAASG,KAAMH,EAASI,SACjCkC,MAAK,SAACC,GAAD,OAAShB,EAAQgB,EAAIC,SAC1BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,QAASF,OAKpC,UACC,uBACCG,SAAUpB,EACVM,KAAK,OACLnC,MAAOY,EACPwB,MAAOhC,EAASG,KAChB2C,YAAY,SAEb,uBACCD,SAAUpB,EACVM,KAAK,UACLnC,MAAOY,EACPwB,MAAOhC,EAASI,QAChB0C,YAAY,YAEb,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASpD,MAAOqB,EAA7B,+B,QC7EEgC,EAAU,CACfC,UAAW,QACRC,WAAY,QAKVC,EAAK,CACVzC,UAAW,OACXC,YAAa,OACbC,WAAY,OACZC,aAAc,6BAgEAuC,EA3DC,SAAC1D,GAEhB,IAAO6C,EAAQ7C,EAAR6C,KAEP,EAAgCc,mBAAS,IAAzC,mBAAOtD,EAAP,KAAiBsB,EAAjB,KACA,EAAsCgC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KA8BA,OA5BApC,qBAAU,WACNgB,IACHlB,EAAakB,EAAKT,KAAMS,EAAKqB,IAAIzD,SACjCoD,EAAehB,EAAKsB,KAAKC,MACzBL,EAAYlB,EAAKsB,KAAKL,UACtBG,EAAcpB,EAAKS,QAAQ,GAAGe,gBAC5B,CAACxB,IAuBH,mCACC,cAACyB,EAAA,EAAD,CAAOC,UAAQ,EAACC,QAAQ,OAAOC,YAAU,EAACC,KAAK,KAAKzE,MAAOqD,EAA3D,SACC,kCACC,6BACC,qBAAIrD,MAAOwD,EAAX,uBAA0BpD,OAE3B,6BACC,qBAAIJ,MAAOwD,EAAX,0BAA6BG,OAE9B,6BACC,qBAAI3D,MAAOwD,EAAX,uBAA0BK,OAE3B,6BACC,qBAAI7D,MAAOwD,EAAX,yBAA4BO,eClE5BW,EAAO,CACZ7D,WAAY,UACZvB,QAAS,OACTC,eAAgB,MAChBC,cAAe,SACf2B,MAAO,UACPC,QAAS,aAqBKuD,EAlBF,SAAC5E,GAEb,MAAgC2D,mBAAS,CAAEnD,KAAM,GAAIC,QAAS,KAA9D,mBAAOJ,EAAP,KAAiBsB,EAAjB,KACA,EAAwBgC,mBAAS,IAAjC,mBAAOd,EAAP,KAAajB,EAAb,KAIA,OACC,0BAAS3B,MAAO0E,EAAhB,UACC,cAAC,EAAD,CACCtE,SAAUA,EACVsB,YAAaA,EACbC,QAASA,IACV,cAAC,EAAD,CAASiB,KAAMA,QCtBZgC,EAAS,CACdtF,QAAS,OACTC,eAAgB,SACdsF,SAAU,aACZC,OAAQ,OAcMC,MAVf,WACE,OACE,uBAAMC,UAAU,MAAMhF,MAAO4E,EAA7B,UACH,cAAC,EAAD,IACA,cAAC,EAAD,QCZDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7bf59db4.chunk.js","sourcesContent":["// import React\nimport React from 'react'\n// import styled from 'styled-components'\n\nconst imgUrl =\n\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQg9N2tu3yQmgJ86Gl7moHxTT-CPkTc6eLNVqk1XSCDNpuLMydsCVIRv19Q-FXikZO20_c&usqp=CAU'\n\nconst poster = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n\tflexDirection: 'column',\n\tbackgroundImage: `url(${imgUrl})`,\n\tbackgroundPosition: 'center',\n\theight: '100vh',\n\twidth: '70vh',\n\tfontFamily: 'Roboto Slab, serif'\n}\n\nconst Poster = (props) => {\n\treturn (\n\t\t<section style={poster}>\n\t\t\t<h1>Weather Finder</h1>\n\t\t\t<p>Find out the temperature, <br></br>weather conditions and more...\n\t\t\t</p>\n\t\t</section>\n\t)\n}\n\nexport default Poster\n","let apiUrl\nconst apiUrls = {\n\n\tproduction: 'https://api.openweathermap.org/data/2.5/weather?q=',\n\tdevelopment: 'https://api.openweathermap.org/data/2.5/weather?q=',\n}\n\nif (window.location.hostname === 'localhost') {\n\tapiUrl = apiUrls.development\n} else {\n\tapiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nconst apiKey = '&appid=20b0c7e54f51b63e8da6cf5b9c85645c'\nconst apiUnits = '&units=imperial'\n\nexport const getWeather = (city, country) => {\n  return axios({\n    url: apiUrl + city + ',' + country + apiKey + apiUnits,\n    method: 'GET'\n  })\n}\n","// import React\nimport React, {  useEffect } from 'react'\n// import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n// import Container from 'react-bootstrap/Container'\nimport { getWeather } from '../api/getWeather'\n\n\n\nconst input = {\n\tbackground: '#2b3746',\n\tmarginRight: '1rem',\n\tborderTop: 'none',\n\tborderRight: 'none',\n\tborderLeft: 'none',\n\tborderBottom: '#8d5c66 1px solid',\n\tcolor:'white',\n\tpadding: '7px'\n}\nconst button = {\n\t// background: '#2b3746',\n\t// display: 'flex',\n\t// justifyContent: 'center',\n\t// flexDirection: 'column',\n\tbackgroundColor: '#d25150',\n\tcolor: 'white',\n\tborderColor: '#d25150',\n\tpadding: '5px 15px',\n\tborderRadius: '3px'\n}\nconst Location = (props) => {\n\n\nconst { location, setLocation, setData } = props\n\nuseEffect(() => {\n\tgetWeather(location.city, location.country)\n\t\n}, [location.city, location.country])\n\nconst handleChange = (event) => {\n\tevent.persist()\n\n\tsetLocation((prevLocation) => {\n\t\tconst updatedField = { [event.target.name]: event.target.value }\n\t\t\n\t\tconst editedLocation = Object.assign(\n\t\t\t{},\n\t\t\tprevLocation,\n\t\t\tupdatedField\n\t\t)\n\t\n\t\treturn editedLocation\n\t})\n}\nconst handleSubmit = (e) => {\n\te.preventDefault()\n\tgetWeather(location.city, location.country)\n\t\t.then((res) => setData(res.data))\n\t\t.catch((err) => console.log('err: ', err))\n}\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tname='city'\n\t\t\t\t\tstyle={input}\n\t\t\t\t\tvalue={location.city}\n\t\t\t\t\tplaceholder='City'\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tname='country'\n\t\t\t\t\tstyle={input}\n\t\t\t\t\tvalue={location.country}\n\t\t\t\t\tplaceholder='Country'\n\t\t\t\t/>\n\t\t\t\t<Button type='submit' style={button}>\n\t\t\t\t\tGet Weather\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nexport default Location\n","// import React\nimport React, { useEffect, useState } from 'react'\nimport Table from 'react-bootstrap/Table'\n\nconst weather = {\n\ttextAlign: 'start',\n    lineHeight: '4rem'\n\t\n\n}\n\nconst tr = {\n\tborderTop: 'none',\n\tborderRight: 'none',\n\tborderLeft: 'none',\n\tborderBottom: '#646467 0.000001rem solid',\n}\n\n\n\nconst Weather = (props) => {\n\n\tconst {data} = props\n\n\tconst [location, setLocation] = useState('')\n\tconst [temperature, setTemperature] = useState('')\n\tconst [humidity, setHumidity] = useState('')\n\tconst [conditions, setConditions] = useState('')\n\n\tuseEffect(() => {\n\t\tif(data){\n\t\tsetLocation( data.name, data.sys.country)\n\t\tsetTemperature(data.main.temp)\n\t\tsetHumidity(data.main.humidity)\n\t\tsetConditions(data.weather[0].description)}\n\t}, [data])\n\n\t// const searchResult = (\n\t// \t<tbody>\n\t// \t\t<tr>\n\t// \t\t\t<td style={tr}>\n\t// \t\t\t\tLocation: {data.name}, {data.sys.country}\n\t// \t\t\t</td>\n\t// \t\t</tr>\n\t// \t\t<tr>\n\t// \t\t\t<td style={tr}>Temperature: {data.main.temp}</td>\n\t// \t\t</tr>\n\t// \t\t<tr>\n\t// \t\t\t<td style={tr}>Humidity: {data.main.humidity}</td>\n\t// \t\t</tr>\n\t// \t\t<tr>\n\t// \t\t\t<td style={tr}>Conditions: {data.weather[0].description}</td>\n\t// \t\t</tr>\n\t// \t</tbody>\n\t// )\n\n\t\n\treturn (\n\t\t<>\n\t\t\t<Table bordered variant='dark' responsive size='lg' style={weather}>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td style={tr}>Location: {location}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td style={tr}>Temperature: {temperature}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td style={tr}>Humidity: {humidity}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td style={tr}>Conditions: {conditions}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</>\n\t)\n}\n\nexport default Weather\n","// import React\nimport React, {useState} from 'react'\nimport Location from './Location'\nimport Weather from './Weather'\n\nconst info = {\n\tbackground: '#2b3746',\n\tdisplay: 'flex',\n\tjustifyContent: 'top',\n\tflexDirection: 'column',\n\tcolor: '#d2524f',\n\tpadding: '6rem 2rem'\n}\n\nconst Info = (props) => {\n\n\tconst [location, setLocation] = useState({ city: '', country: '' })\n\tconst [data, setData] = useState('')\n\n\n\n\treturn (\n\t\t<section style={info}>\n\t\t\t<Location\n\t\t\t\tlocation={location}\n\t\t\t\tsetLocation={setLocation}\n\t\t\t\tsetData={setData}></Location>\n\t\t\t<Weather data={data}></Weather>\n\t\t</section>\n\t)\n}\n\nexport default Info\n","import './App.css';\nimport Poster from './components/Poster'\nimport Info from './components/Info'\n\n\nconst layout = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n  \tflexFlow: 'row nowrap',\n\tborder: 'red'\n}\n\n\nfunction App() {\n  return (\n    <main className=\"App\" style={layout}>\n\t<Poster></Poster>\n\t<Info></Info>\n\t\n</main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}